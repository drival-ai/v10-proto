syntax = "proto3";

package v10proto.iam.v1;

import "google/api/annotations.proto";
import "google/rpc/status.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/drival-ai/v10-go/iam";

// Iam service definition.
service Iam {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(ALPHA) IAM API. Base URL: https://api.drival.ai"
    external_docs: {
      url: "https://github.com/drival-ai/v10-proto/tree/main/iam/v1";
      description: "See here for the service definition.";
    }
  };

  // Register an account.
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/v10/iam/v1/register"
      body: "*"
    };
  }

  // Login an account.
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v10/iam/v1/login"
      body: "*"
    };
  }

  // Testing endpoint.
  rpc WhoAmI(WhoAmIRequest) returns (WhoAmIResponse) {
    option (google.api.http) = {
      get: "/v10/iam/v1/whoami"
    };
  }
}

// Request message for the Register rpc.
message RegisterRequest {
  string token = 1;

  string email = 2;
  string password = 3;
}

// Response message for the Register rpc.
message RegisterResponse {
  string access_token = 1;

  google.rpc.Status status = 2;
}

// Request message for the Login rpc.
message LoginRequest {
  string token = 1;

  string email = 2;
  string password = 3;
}

// Response message for the Login rpc.
message LoginResponse {
  string access_token = 1;

  google.rpc.Status status = 2;
}

// Request message for the WhoAmI rpc.
message WhoAmIRequest {}

// Request message for the WhoAmI rpc.
message WhoAmIResponse {
  string id = 1;
  string name = 2;
  string email = 3;
  string picture = 4;
}

