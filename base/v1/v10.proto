syntax = "proto3";

package v10proto.base.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/drival-ai/v10-go/base";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "V10 API reference";
    description: "Drival AI's **V10** API is a RESTful API that can be accessed by an HTTP client such as `curl`, or any HTTP library which is part of most modern programming languages. This API reference is autogenerated from [protocol buffers](https://developers.google.com/protocol-buffers) defined in this [repository](https://github.com/drival-ai/v10-proto).\n\nSome endpoints, especially those that return lists of resources, have streaming responses; newline-separated stream of “chunks”. Each chunk is an envelope that can contain either a response message or an error. Only the last chunk will include an error, if any.";
    version: "alpha";
  };
  host: "api.drival.ai";
  schemes: HTTPS;
};

// V10 service definition.
service V10 {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(ALPHA) V10 API. Base URL: https://api.drival.ai"
    external_docs: {
      url: "https://github.com/drival-ai/v10-proto/tree/main/v10/v1";
      description: "See here for the service definition.";
    }
  };

  // Testing endpoint.
  rpc Do(DoRequest) returns (DoResponse) {
    option (google.api.http) = {
      post: "/v10/v1:do"
      body: "*"
    };
  }

  // Vehicle manual registration endpoint.
  rpc RegisterVehicle(RegisterVehicleRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v10/vehicle/register"
      body: "*"
    };
  }

  // List vehicles owned by the user.
  rpc ListVehicles(ListVehiclesRequest) returns (ListVehiclesResponse) {
    option (google.api.http) = {
      get: "/v10/vehicle/list"
    };
  }

  rpc DeleteVehicle(DeleteVehicleRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v10/vehicle/{id}"
    };
  }
}


// Vehicle message definition.
message Vehicle {
  string id = 1;
  string chassisNumber = 2;
  string vin = 3;
  string make = 4;
  string model = 5;
  int32 year = 6;
  int32 kilometers = 7;
}

// Request message for the RegisterVehicle rpc. 
message RegisterVehicleRequest {
  // Either chassis number or vin must be provided.
  Vehicle vehicle = 1;
}

// Request message for the RegisterVehicle rpc.
message ListVehiclesRequest {}


// Response message for the ListVehicles rpc.
message ListVehiclesResponse {
  // Either chassis number or vin must be provided.
  repeated Vehicle vehicles = 1;
}


message DeleteVehicleRequest {
  // Required. Vehicle id.
  string id = 1;
}


// Request message for the Do rpc.
message DoRequest {
  string data = 1;
}

// Response message for the Do rpc.
message DoResponse {
  string data = 1;
}
